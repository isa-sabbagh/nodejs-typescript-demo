// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema
// prisma generate

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Post {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  title     String   @db.VarChar(255)
  content   String?
  published Boolean  @default(false)
  author    User     @relation(fields: [authorId], references: [id])
  authorId  Int
}

model Profile {
  id     Int     @id @default(autoincrement())
  bio    String?
  user   User    @relation(fields: [userId], references: [id])
  userId Int     @unique
}

model User {
  id         Int      @id @default(autoincrement())
  email      String   @unique
  token      String   @unique
  createdAt  DateTime @default(now())
  firstName  String
  lastName   String?
  ip         String?
  deviceInfo String?
  deviceId   String?
  posts      Post[]
  profile    Profile?
}

// model User {
//   id           Int           @id @default(autoincrement())
//   email        String        @unique
//   token        String        @unique
//   createdAt    DateTime      @default(now())
//   firstName    String
//   lastName     String?
//   ip           String?
//   deviceInfo   String?
//   deviceId     String?
//   profile      Profile?
//   role         Role          @default(PATIENT)
//   appointments Appointment[]
// }

// model Profile {
//   id     Int       @id @default(autoincrement())
//   bio    String
//   phone  String?
//   avatar String?
//   dob    DateTime? // date of birth
//   // https://www.prisma.io/docs/concepts/components/introspection#one-to-one-relations
//   user   User?     @relation(fields: [userId], references: [id])
//   userId Int?      @unique
// }

// model Appointment {
//   id          Int       @id @default(autoincrement())
//   slug        String    @unique
//   title       String
//   description String?
//   createdAt   DateTime  @default(now())
//   category    Category?
//   sessions    Session[]
//   patientId   Int
//   patient     User      @relation(fields: [patientId], references: [id])
// }

// model Category {
//   id            Int         @id @default(autoincrement())
//   name          String
//   appointment   Appointment @relation(fields: [appointmentId], references: [id])
//   appointmentId Int         @unique
// }

// model Session {
//   id            Int         @id @default(autoincrement())
//   description   String?
//   date          DateTime
//   appointment   Appointment @relation(fields: [appointmentId], references: [id])
//   appointmentId Int
// }

// enum Role {
//   ADMIN
//   DOCTOR
//   NURSE
//   PATIENT
// }
